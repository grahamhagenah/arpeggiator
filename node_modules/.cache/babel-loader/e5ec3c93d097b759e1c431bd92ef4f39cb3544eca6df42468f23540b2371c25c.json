{"ast":null,"code":"var _jsxFileName = \"/Users/grahamhagenah/Documents/Development/synth/src/App.js\";\nimport logo from './logo.svg';\nimport * as Tone from 'tone';\nimport './App.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // async startTone() => {\n  //   await Tone.start()\n  //   console.log('audio is ready')\n  // }\n\n  const Piano = () => {\n    const notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(PianoKey, {\n        note: note,\n        isBlack: note.includes('#')\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n  const PianoKey = _ref => {\n    let {\n      note,\n      isBlack\n    } = _ref;\n    const playNote = () => {\n      const synth = new Tone.Synth().toDestination();\n      synth.triggerAttackRelease(note, '8n');\n    };\n    const keyStyle = isBlack ? {\n      backgroundColor: 'black',\n      color: 'white'\n    } : {};\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playNote,\n      style: keyStyle,\n      children: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n  const handleButtonClick = async () => {\n    await Tone.start();\n    console.log('Button was clicked!');\n\n    //create a synth and connect it to the main output (your speakers)\n    const synth = new Tone.Synth().toDestination();\n\n    //play a middle 'C' for the duration of an 8th note\n    synth.triggerAttackRelease(\"C6\", \"8n\");\n    // Additional async operations can go here\n  };\n\n  useEffect => {\n    Tone.start();\n    console.log(\"start\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Piano, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Tone","useEffect","App","Piano","notes","map","note","index","includes","PianoKey","isBlack","playNote","synth","Synth","toDestination","triggerAttackRelease","keyStyle","backgroundColor","color","handleButtonClick","start","console","log"],"sources":["/Users/grahamhagenah/Documents/Development/synth/src/App.js"],"sourcesContent":["import logo from './logo.svg'\nimport * as Tone from 'tone'\nimport './App.css'\nimport { useEffect } from 'react'\n\nfunction App() {\n\n  // async startTone() => {\n  //   await Tone.start()\n  //   console.log('audio is ready')\n  // }\n\n  const Piano = () => {\n    const notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n\n    return (\n      <div>\n        {notes.map((note, index) => (\n          <PianoKey key={index} note={note} isBlack={note.includes('#')} />\n        ))}\n      </div>\n    )\n  }\n\n  const PianoKey = ({ note, isBlack }) => {\n    const playNote = () => {\n      const synth = new Tone.Synth().toDestination();\n      synth.triggerAttackRelease(note, '8n');\n    };\n\n    const keyStyle = isBlack ? { backgroundColor: 'black', color: 'white' } : {};\n\n    return (\n      <button onClick={playNote} style={keyStyle}>\n        {note}\n      </button>\n    )\n}\n\n\n  const handleButtonClick = async () => {\n    await Tone.start()\n    console.log('Button was clicked!');\n\n    //create a synth and connect it to the main output (your speakers)\n    const synth = new Tone.Synth().toDestination();\n\n    //play a middle 'C' for the duration of an 8th note\n    synth.triggerAttackRelease(\"C6\", \"8n\");\n    // Additional async operations can go here\n  }\n\n  useEffect => {\n    Tone.start()\n    console.log(\"start\")\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Piano/>\n      </header>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AAAA;AAEjC,SAASC,GAAG,GAAG;EAEb;EACA;EACA;EACA;;EAEA,MAAMC,KAAK,GAAG,MAAM;IAClB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC;IAE/E,oBACE;MAAA,UACGA,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB,QAAC,QAAQ;QAAa,IAAI,EAAED,IAAK;QAAC,OAAO,EAAEA,IAAI,CAACE,QAAQ,CAAC,GAAG;MAAE,GAA/CD,KAAK;QAAA;QAAA;QAAA;MAAA,QACrB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAEV,CAAC;EAED,MAAME,QAAQ,GAAG,QAAuB;IAAA,IAAtB;MAAEH,IAAI;MAAEI;IAAQ,CAAC;IACjC,MAAMC,QAAQ,GAAG,MAAM;MACrB,MAAMC,KAAK,GAAG,IAAIZ,IAAI,CAACa,KAAK,EAAE,CAACC,aAAa,EAAE;MAC9CF,KAAK,CAACG,oBAAoB,CAACT,IAAI,EAAE,IAAI,CAAC;IACxC,CAAC;IAED,MAAMU,QAAQ,GAAGN,OAAO,GAAG;MAAEO,eAAe,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC,GAAG,CAAC,CAAC;IAE5E,oBACE;MAAQ,OAAO,EAAEP,QAAS;MAAC,KAAK,EAAEK,QAAS;MAAA,UACxCV;IAAI;MAAA;MAAA;MAAA;IAAA,QACE;EAEf,CAAC;EAGC,MAAMa,iBAAiB,GAAG,YAAY;IACpC,MAAMnB,IAAI,CAACoB,KAAK,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;IAElC;IACA,MAAMV,KAAK,GAAG,IAAIZ,IAAI,CAACa,KAAK,EAAE,CAACC,aAAa,EAAE;;IAE9C;IACAF,KAAK,CAACG,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC;IACtC;EACF,CAAC;;EAEDd,SAAS,IAAI;IACXD,IAAI,CAACoB,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,YAAY;MAAA,uBAC5B,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,KA3DQpB,GAAG;AA6DZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}